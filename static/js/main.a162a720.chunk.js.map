{"version":3,"sources":["redux/ActionTypes/TodoActionTypes.js","redux/ActionCreators/TodoActionCreators.js","components/TodoList/Todo.js","components/AddTodo/AddTodo.js","components/TodoList/TodoList.js","App.js","reportWebVitals.js","redux/Reducer/TodoReducer.js","redux/Reducer/RootReducer.js","redux/store.js","index.js"],"names":["GET_TODOS_REQUEST","GET_TODOS_SUCCESS","GET_TODOS_FAILURE","POST_TODOS_REQUEST","POST_TODO_SUCCESS","POST_TODOS_FAILURE","DELETE_TODO_SUCCESS","PUT_TODOS_REQUEST","PUT_TODO_SUCCESS","PUT_TODOS_FAILURE","TODO_STATUS_CHANGE","SET_FILTER","getTodosRequest","type","getTodosSuccess","todos","payload","postTodoSuccess","todo","newTodo","connect","state","todoReducer","filter","dispatch","data","deleteTodoSuccess","id","todoStatusChange","putTodoSuccess","name","props","isActive","useState","isEditing","setIsEditing","text","setText","Box","display","p","className","bgcolor","Checkbox","checked","onClick","todoCompleted","color","inputProps","InputBase","autoFocus","value","onChange","e","target","deleteTodoSuccessById","todoNumber","setNewTodo","placeholder","Button","alert","newOne","handleSubmit","list","setFilter","classes","makeStyles","root","width","minWidth","backgroundColor","borderRadius","minHeight","maxHeight","overflow","marginTop","useStyles","useEffect","a","getData","React","setValue","completedTodos","ActiveTodos","Promise","resolve","reject","filterTodo","newFilter","Fragment","Container","maxwidth","map","index","length","Paper","square","Tabs","indicatorColor","textColor","event","newValue","aria-label","Tab","label","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isLoading","error","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4aAAaA,G,MAAoB,qBACpBC,EAAoB,oBACpBC,EAAoB,oBAEpBC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAqB,qBAGrBC,EAAsB,sBAGtBC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAoB,oBAEpBC,EAAqB,qBACrBC,EAAa,aCAbC,EAAkB,WAC7B,MAAO,CACLC,KAAMb,IAIGc,EAAkB,SAACC,GAC9B,MAAO,CACLF,KAAMZ,EACNe,QAASD,IAiBAE,EAAkB,SAACC,GAC9B,MAAO,CACLL,KAAMT,EACNe,QAASD,I,OCiBb,IAkBeE,eAlBS,SAACC,GACvB,MAAO,CACLN,MAAOM,EAAMC,YAAYP,MACzBQ,OAAQF,EAAMC,YAAYC,WAIH,SAACC,GAC1B,MAAO,CACLZ,gBAAiB,kBAAMY,EAASZ,MAChCE,gBAAiB,SAACI,GAAD,OAAUM,EAASV,EAAgBI,KACpDD,gBAAiB,SAACQ,GAAD,OAAUD,EAASP,EAAgBQ,KACpDC,kBAAmB,SAACC,GAAD,OAAQH,EDZE,SAACG,GAChC,MAAO,CACLd,KAAMP,EACNqB,GAAIA,GCSgCD,CAAkBC,KACtDC,iBAAkB,SAACD,GAAD,OAAQH,EDCE,SAACG,GAC/B,MAAO,CACLd,KAAMH,EACNiB,GAAKA,GCJ8BC,CAAiBD,KACpDE,eAAgB,SAACC,EAAMH,GAAP,OAAcH,EDoBJ,SAACM,EAAMH,GACnC,MAAO,CACLd,KAAML,EACNsB,KAAMA,EACNH,GAAIA,GCxBmCE,CAAeC,EAAMH,QAIjDP,EAjEf,SAAcW,GAAQ,IAAD,EAEYA,EAAMb,KAA7BS,EAFW,EAEXA,GAAIG,EAFO,EAEPA,KAAME,EAFC,EAEDA,SACHT,GAAiFQ,EAAxFhB,MAAwFgB,EAAjFR,QAAyBG,GAAwDK,EAAzEd,gBAAyEc,EAAxDL,mBAAmBE,EAAqCG,EAArCH,iBAAkBC,EAAmBE,EAAnBF,eAH1D,EAKeI,oBAAS,GALxB,mBAKZC,EALY,KAKDC,EALC,OAMKF,mBAASH,GANd,mBAMZM,EANY,KAMNC,EANM,KAiBnB,OACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,EAAG,EAAGC,UAAU,YAAYC,QAAQ,mBAAxD,UACE,gCACE,cAACC,EAAA,EAAD,CACEhB,GAAE,cAASA,GAEXiB,SAAUZ,EACVa,QAAS,kBAXK,SAAClB,GACrBC,EAAiBD,GAUImB,CAAcnB,IAC7BoB,MAAM,UACNC,WAAY,CAAE,aAAc,wBAE3Bd,EAAY,cAACe,EAAA,EAAD,CAAWpC,KAAK,OAAOqC,WAAW,EAAMT,UAAU,WAAYX,KAAK,OAAOqB,MAAOf,EAAMgB,SAAW,SAACC,GAAD,OAAOhB,EAAQgB,EAAEC,OAAOH,UAAY,iCAASrB,OAEhK,gCACa,OAAVP,GAA6B,UAAVA,EAAoB,cAAC,IAAD,CAAUsB,QAAS,WAC3DV,GAAcD,GACXA,IACDL,EAAeO,EAAKT,GACpBQ,GAAa,OAGV,KAEP,cAAC,IAAD,CAAYU,QAAS,kBAhCK,SAAClB,GAC7Bf,IACAc,EAAkBC,GA8BW4B,CAAsB5B,e,gCCHvD,IAeeP,eAfS,SAACC,GACvB,MAAO,CACLN,MAAOM,EAAMC,YAAYP,MACzByC,WAAYnC,EAAMC,YAAYkC,eAIP,SAAChC,GAC1B,MAAO,CACLZ,gBAAiB,kBAAMY,EAASZ,MAChCE,gBAAiB,SAACI,GAAD,OAAUM,EAASV,EAAgBI,KACpDD,gBAAiB,SAACQ,GAAD,OAAUD,EAASP,EAAgBQ,QAIzCL,EAtDf,YAAmD,IAAhCoC,EAA+B,EAA/BA,WAAYvC,EAAmB,EAAnBA,gBAAmB,EAGlBgB,mBAAS,IAHS,mBAGzCd,EAHyC,KAGhCsC,EAHgC,KAqBhD,OACE,8BACE,sBAAKhB,UAAU,gBAAf,UACE,cAACQ,EAAA,EAAD,CACER,UAAU,aACVd,GAAG,UACHd,KAAK,OACLiB,KAAK,OACLqB,MAAOhC,EACPuC,YAAY,OACZN,SAAU,SAACC,GAAD,OAAOI,EAAWJ,EAAEC,OAAOH,UAEvC,cAACQ,EAAA,EAAD,UAAQ,cAAC,IAAD,CAAUd,QAAS,kBA5BZ,WAEnB,GAAe,IAAX1B,EACF,OAAOyC,MAAM,4BAGf,IAAMC,EAAS,CACblC,GAAI6B,EACJ1B,KAAMX,EACNa,UAAU,GAGZyB,EAAW,IACXxC,EAAgB4C,GAeqBC,gBC/BnCC,EAAO,CACX,CAAEpC,GAAI,EAAGG,KAAM,QAASE,UAAU,GAClC,CAAEL,GAAI,EAAGG,KAAM,QAASE,UAAU,GAClC,CAAEL,GAAI,EAAGG,KAAM,QAASE,UAAU,GAClC,CAAEL,GAAI,EAAGG,KAAM,QAASE,UAAU,IA4GpC,IAiBeZ,eAjBS,SAACC,GACvB,MAAO,CACLN,MAAOM,EAAMC,YAAYP,MACzByC,WAAYnC,EAAMC,YAAYkC,WAC9BjC,OAAQF,EAAMC,YAAYC,WAIH,SAACC,GAC1B,MAAO,CACLZ,gBAAiB,kBAAMY,EAASZ,MAChCE,gBAAiB,SAACI,GAAD,OAAUM,EAASV,EAAgBI,KACpDD,gBAAiB,SAACQ,GAAD,OAAUD,EAASP,EAAgBQ,KACpDuC,UAAW,SAACzC,GAAD,OAAYC,EHzDF,SAACD,GACxB,MAAO,CACLV,KAAMF,EACNY,OAASA,GGsDuByC,CAAUzC,QAI/BH,EA1Hf,YAQI,IAAD,EAPDG,EAOC,EAPDA,OACAR,EAMC,EANDA,MAEAH,GAIC,EALD4C,WAKC,EAJD5C,iBACAE,EAGC,EAHDA,gBAEAkD,GACC,EAFD/C,gBAEC,EADD+C,WAmBMC,EAhBYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,MACPC,SAAU,QACVC,gBAAiB,UACjBC,aAAc,OACdC,UAAW,QACXC,UAAW,QACXC,SAAU,OACVC,UAAY,MACZ,uBAAwB,CACtBpC,QAAS,UAKCqC,GAEhBC,oBAAS,sBAAC,sBAAAC,EAAA,6DACRlE,IADQ,SAEFmE,EAAQhB,GAFN,2CAGP,IAvBF,MAyByBiB,IAAM/C,SAAS,GAzBxC,mBAyBMkB,EAzBN,KAyBa8B,EAzBb,KA2BKC,EAAiBnE,EAAMQ,QAAO,SAAUL,GAC5C,IAAsB,IAAlBA,EAAKc,SACP,OAAOd,KAILiE,EAAcpE,EAAMQ,QAAO,SAAUL,GACzC,IAAsB,IAAlBA,EAAKc,SACP,OAAOd,KAQL6D,EAAU,SAAChB,GAAD,OACd,IAAIqB,SAAQ,SAACC,EAASC,GACpBxE,EAAgBiD,GAChBsB,GAAQ,OAGNE,EAAa,SAACC,GAClBxB,EAAUwB,IAGZ,OACE,eAAC,IAAMC,SAAP,WACE,eAACC,EAAA,GAAD,GACEC,SAAS,KACTlD,UAAU,qBAFZ,0BAGawB,EAAQE,MAHrB,0BAKc,QAAX5C,EAAmB,cAAC,EAAD,IAAc,KACtB,QAAXA,EACGR,EAAM6E,KAAI,SAAC1E,EAAM2E,GACf,OAAO,cAAC,EAAD,CAAkB3E,KAAMA,GAAb2E,MAET,cAAXtE,EACA2D,EAAeU,KAAI,SAAC1E,EAAM2E,GACxB,OAAO,cAAC,EAAD,CAAkB3E,KAAMA,GAAb2E,MAEpBV,EAAYS,KAAI,SAAC1E,EAAM2E,GACrB,OAAO,cAAC,EAAD,CAAkB3E,KAAMA,GAAb2E,MAGpB,sBAAKpD,UAAU,YAAf,cAAwC,QAAXlB,EAC7BR,EAAM+E,OACK,cAAXvE,EACA2D,EAAeY,OACfX,EAAYW,OAJZ,cAlBN,IAyBA,cAACC,EAAA,EAAD,CAAOC,QAAM,EAACvD,UAAU,UAAxB,SACE,eAACwD,EAAA,EAAD,CACE9C,MAAOA,EACP+C,eAAe,UACfC,UAAU,UACV/C,SA9Ca,SAACgD,EAAOC,GAC3BpB,EAASoB,IA8CHC,aAAW,wBALb,UAOE,cAACC,EAAA,EAAD,CAAKC,MAAM,MAAM3D,QAAS,kBAAM0C,EAAW,UAC3C,cAACgB,EAAA,EAAD,CAAKC,MAAM,SAAS3D,QAAS,kBAAM0C,EAAW,aAC9C,cAACgB,EAAA,EAAD,CAAKC,MAAM,YAAY3D,QAAS,kBAAM0C,EAAW,2BCtG5CkB,MAff,WACE,OACE,sBAAKhE,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAACH,EAAA,EAAD,CACEC,QAAQ,OACRC,EAAG,EACHC,UAAU,WAHZ,sCAMF,cAAC,EAAD,QCFSiE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+BCQRQ,GAAe,CACnBC,WAAW,EACXrG,MAAO,GACPsG,MAAO,KACP7D,WAAY,KACZjC,OAAQ,OAuHKD,GApHK,WAAmC,IAAlCD,EAAiC,uDAAzB8F,GAAcG,EAAW,uCAEpD,OAAQA,EAAOzG,MAEb,KAAKb,EAEH,OAAO,2BACFqB,GADL,IAEE+F,WAAW,IAGf,KAAKnH,EAEH,OAAO,2BACFoB,GADL,IAEEmC,WAAY8D,EAAOtG,QAAQ8E,OAC3BsB,WAAW,EACXrG,MAAOuG,EAAOtG,UAGlB,KAAKd,EAEH,OAAO,2BACFmB,GADL,IAEE+F,WAAW,EACXrG,MAAO,GACPsG,MAAOC,EAAOD,QAGlB,KAAKlH,EAEH,OAAO,2BACFkB,GADL,IAEE+F,WAAW,IAGf,KAAKhH,EAEH,OAAO,2BACFiB,GADL,IAEEmC,WAAYnC,EAAMmC,WAAa,EAC/BzC,MAAM,GAAD,mBAAMM,EAAMN,OAAZ,CAAmBuG,EAAOnG,YAGnC,KAAKd,EAEH,OAAO,eACFgB,GAGP,KAAKf,EAEH,OAAO,2BACFe,GADL,IAEEN,MAAOM,EAAMN,MAAMQ,QAAO,SAAUL,GAClC,OAAOA,EAAKS,KAAO2F,EAAO3F,QAIhC,KAAKjB,EAEH,OAAO,2BACFW,GADL,IAEEN,MAAOM,EAAMN,MAAMQ,QAAO,SAAUL,GAQlC,OAPIA,EAAKS,KAAO2F,EAAO3F,MACC,IAAlBT,EAAKc,SACPd,EAAKc,UAAW,EAEhBd,EAAKc,UAAW,GAGbd,OAIb,KAAKP,EAEH,OAAO,2BACFU,GADL,IAEEE,OAAQ+F,EAAO/F,SAGjB,KAAKhB,EAEH,OAAO,2BACFc,GADL,IAEE+F,WAAW,IAGf,KAAK5G,EAEH,OAAO,2BACFa,GADL,IAEE+F,WAAY,EACZrG,MAAQM,EAAMN,MAAMQ,QAAO,SAAUL,GAInC,OAHIA,EAAKS,KAAO2F,EAAO3F,KACrBT,EAAKY,KAAOwF,EAAOxF,MAEdZ,OAIX,KAAKT,EAEH,OAAO,2BACFY,GADL,IAEE+F,WAAY,EACZC,MAAQC,EAAOD,QAGvB,QAEE,OAAOhG,IC/HEkG,GAJKC,0BAAgB,CAClClG,YAAaA,KCEAmG,GAFDC,sBAAYH,GAAaI,iCCIvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.a162a720.chunk.js","sourcesContent":["export const GET_TODOS_REQUEST = \"GET_TODOS_REQUEST\";\r\nexport const GET_TODOS_SUCCESS = \"GET_TODOS_SUCCESS\";\r\nexport const GET_TODOS_FAILURE = \"GET_TODOS_FAILURE\";\r\n\r\nexport const POST_TODOS_REQUEST = \"POST_TODOS_REQUEST\";\r\nexport const POST_TODO_SUCCESS = \"POST_TODO_SUCCESS\";\r\nexport const POST_TODOS_FAILURE = \"POST_TODOS_FAILURE\";\r\n\r\nexport const DELETE_TODOS_REQUEST = \"DELETE_TODOS_REQUEST\";\r\nexport const DELETE_TODO_SUCCESS = \"DELETE_TODO_SUCCESS\";\r\nexport const DELETE_TODOS_FAILURE = \"DELETE_TODOS_FAILURE\";\r\n\r\nexport const PUT_TODOS_REQUEST = \"PUT_TODOS_REQUEST\";\r\nexport const PUT_TODO_SUCCESS = \"PUT_TODO_SUCCESS\";\r\nexport const PUT_TODOS_FAILURE = \"PUT_TODOS_FAILURE\";\r\n\r\nexport const TODO_STATUS_CHANGE = \"TODO_STATUS_CHANGE\";\r\nexport const SET_FILTER = \"SET_FILTER\";","import {\r\n  GET_TODOS_REQUEST,\r\n  GET_TODOS_SUCCESS,\r\n  GET_TODOS_FAILURE,\r\n  POST_TODO_SUCCESS,\r\n  DELETE_TODO_SUCCESS,\r\n  POST_TODOS_REQUEST,\r\n  POST_TODOS_FAILURE,\r\n  DELETE_TODOS_REQUEST,\r\n  DELETE_TODOS_FAILURE,\r\n  TODO_STATUS_CHANGE,\r\n  SET_FILTER,\r\n  PUT_TODOS_REQUEST,\r\n  PUT_TODO_SUCCESS,\r\n  PUT_TODOS_FAILURE,\r\n} from \"../ActionTypes/TodoActionTypes\";\r\n\r\nexport const getTodosRequest = () => {\r\n  return {\r\n    type: GET_TODOS_REQUEST,\r\n  };\r\n};\r\n\r\nexport const getTodosSuccess = (todos) => {\r\n  return {\r\n    type: GET_TODOS_SUCCESS,\r\n    payload: todos,\r\n  };\r\n};\r\n\r\nexport const getTodosFailure = (err) => {\r\n  return {\r\n    type: GET_TODOS_FAILURE,\r\n    error: err,\r\n  };\r\n};\r\n\r\nexport const postTodoRequest = () => {\r\n  return {\r\n    type: POST_TODOS_REQUEST\r\n  }\r\n}\r\n\r\nexport const postTodoSuccess = (todo) => {\r\n  return {\r\n    type: POST_TODO_SUCCESS,\r\n    newTodo: todo,\r\n  };\r\n};\r\n\r\nexport const postTodoFailure = (err) => {\r\n  return {\r\n    type: POST_TODOS_FAILURE,\r\n    error : err,\r\n  }\r\n}\r\n\r\nexport const deleteTodoRequest = () => {\r\n  return {\r\n    type: DELETE_TODOS_REQUEST\r\n  }\r\n}\r\n\r\nexport const deleteTodoSuccess = (id) => {\r\n  return {\r\n    type: DELETE_TODO_SUCCESS,\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const deleteTodoFailure = (err) => {\r\n  return {\r\n    type: DELETE_TODOS_FAILURE,\r\n    error : err,\r\n  }\r\n}\r\n\r\nexport const todoStatusChange = (id) => {\r\n  return {\r\n    type: TODO_STATUS_CHANGE,\r\n    id : id,\r\n  }\r\n}\r\n\r\nexport const setFilter = (filter) => {\r\n  return {\r\n    type: SET_FILTER,\r\n    filter : filter,\r\n  }\r\n}\r\n\r\nexport const putTodoRequest = () => {\r\n  return {\r\n    type: PUT_TODOS_REQUEST\r\n  }\r\n}\r\n\r\nexport const putTodoSuccess = (name, id) => {\r\n  return {\r\n    type: PUT_TODO_SUCCESS,\r\n    name: name,\r\n    id: id,\r\n  };\r\n};\r\n\r\nexport const putTodoFailure = (err) => {\r\n  return {\r\n    type: PUT_TODOS_FAILURE,\r\n    error : err,\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Box, Checkbox, InputBase, Switch } from \"@material-ui/core\";\r\n\r\nimport \"./style.css\";\r\nimport {\r\n  deleteTodoSuccess,\r\n  getTodosRequest,\r\n  getTodosSuccess,\r\n  postTodoSuccess,\r\n  putTodoSuccess,\r\n  todoStatusChange,\r\n} from \"../../redux/ActionCreators/TodoActionCreators\";\r\n\r\nfunction Todo(props) {\r\n\r\n  const { id, name, isActive } = props.todo;\r\n  const { todos, filter, postTodoSuccess, deleteTodoSuccess, todoStatusChange, putTodoSuccess } = props;\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [text, setText] = useState(name);\r\n\r\n  const deleteTodoSuccessById = (id) => {\r\n    getTodosRequest();\r\n    deleteTodoSuccess(id);\r\n  };\r\n\r\n  const todoCompleted = (id) => {\r\n    todoStatusChange(id);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" p={2} className=\"container\" bgcolor=\"background.paper\">\r\n      <div>\r\n        <Checkbox\r\n          id={`todo${id}`}\r\n\r\n          checked={!isActive}\r\n          onClick={() => todoCompleted(id)}\r\n          color=\"primary\"\r\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n        />\r\n          {isEditing ? <InputBase type=\"text\" autoFocus={true} className=\"editTodo\"  name=\"name\" value={text} onChange ={(e) => setText(e.target.value)}/> : <strong>{name}</strong>}\r\n      </div>\r\n      <div>\r\n        {filter == \"All\" || filter == \"Active\" ?<EditIcon onClick={() => {\r\n        setIsEditing(!isEditing);\r\n        if(isEditing){\r\n          putTodoSuccess(text,id);\r\n          setIsEditing(false);\r\n\r\n        }\r\n      }} /> :null}\r\n      \r\n      <DeleteIcon onClick={() => deleteTodoSuccessById(id)} />\r\n      </div>\r\n\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todoReducer.todos,\r\n    filter: state.todoReducer.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getTodosRequest: () => dispatch(getTodosRequest()),\r\n    getTodosSuccess: (todo) => dispatch(getTodosSuccess(todo)),\r\n    postTodoSuccess: (data) => dispatch(postTodoSuccess(data)),\r\n    deleteTodoSuccess: (id) => dispatch(deleteTodoSuccess(id)),\r\n    todoStatusChange: (id) => dispatch(todoStatusChange(id)),\r\n    putTodoSuccess: (name, id) => dispatch(putTodoSuccess(name, id)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Input, Button, makeStyles, TextField, InputBase } from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport {\r\n  getTodosRequest,\r\n  getTodosSuccess,\r\n  getTodosFailure,\r\n  postTodoSuccess,\r\n} from \"../../redux/ActionCreators/TodoActionCreators\";\r\n\r\nfunction AddTodo({ todoNumber, postTodoSuccess }) {\r\n\r\n\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n\r\n    if (newTodo == \"\") {\r\n      return alert(\"please enter todo name!!\");\r\n    }\r\n\r\n    const newOne = {\r\n      id: todoNumber,\r\n      name: newTodo,\r\n      isActive: true,\r\n    };\r\n    \r\n    setNewTodo(\"\");\r\n    postTodoSuccess(newOne);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"formContainer\">\r\n        <InputBase\r\n          className=\"inputStyle\"\r\n          id=\"newTodo\"\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          value={newTodo}\r\n          placeholder=\"Todo\"\r\n          onChange={(e) => setNewTodo(e.target.value)}\r\n        />\r\n        <Button><SendIcon onClick={() => handleSubmit()} /></Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todoReducer.todos,\r\n    todoNumber: state.todoReducer.todoNumber,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getTodosRequest: () => dispatch(getTodosRequest()),\r\n    getTodosSuccess: (todo) => dispatch(getTodosSuccess(todo)),\r\n    postTodoSuccess: (data) => dispatch(postTodoSuccess(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Container, makeStyles } from \"@material-ui/core\";\r\n\r\nimport Todo from \"./Todo\";\r\nimport {\r\n  getTodosRequest,\r\n  getTodosSuccess,\r\n  postTodoSuccess,\r\n  setFilter,\r\n} from \"../../redux/ActionCreators/TodoActionCreators\";\r\nimport AddTodo from \"../AddTodo/AddTodo\";\r\n\r\nconst list = [\r\n  { id: 0, name: \"todo1\", isActive: true },\r\n  { id: 1, name: \"todo2\", isActive: true },\r\n  { id: 2, name: \"todo3\", isActive: true },\r\n  { id: 3, name: \"todo4\", isActive: true },\r\n];\r\n\r\nfunction TodoList({\r\n  filter,\r\n  todos,\r\n  todoNumber,\r\n  getTodosRequest,\r\n  getTodosSuccess,\r\n  postTodoSuccess,\r\n  setFilter,\r\n}) {\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: \"60%\",\r\n      minWidth: \"250px\",\r\n      backgroundColor: \"#E6F1F5\",\r\n      borderRadius: \"20px\",\r\n      minHeight: \"400px\",\r\n      maxHeight: \"400px\",\r\n      overflow: \"auto\",\r\n      marginTop : \"5vh\",\r\n      \"&::-webkit-scrollbar\": {\r\n        display: \"none\",\r\n      },\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(async () => {\r\n    getTodosRequest();\r\n    await getData(list);\r\n  }, []);\r\n\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const completedTodos = todos.filter(function (todo) {\r\n    if (todo.isActive === false) {\r\n      return todo;\r\n    }\r\n  });\r\n\r\n  const ActiveTodos = todos.filter(function (todo) {\r\n    if (todo.isActive === true) {\r\n      return todo;\r\n    }\r\n  });\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const getData = (list) =>\r\n    new Promise((resolve, reject) => {\r\n      getTodosSuccess(list);\r\n      resolve(true);\r\n    });\r\n\r\n  const filterTodo = (newFilter) => {\r\n    setFilter(newFilter);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Container\r\n        maxwidth=\"lg\"\r\n        className=\"todoListContainer\"\r\n        className={classes.root}\r\n      >\r\n        {filter === \"All\" ? <AddTodo /> : null}\r\n        {filter === \"All\"\r\n          ? todos.map((todo, index) => {\r\n              return <Todo key={index} todo={todo} />;\r\n            })\r\n          : filter === \"Completed\"\r\n          ? completedTodos.map((todo, index) => {\r\n              return <Todo key={index} todo={todo} />;\r\n            })\r\n          : ActiveTodos.map((todo, index) => {\r\n              return <Todo key={index} todo={todo} />;\r\n            })}\r\n\r\n            <div className=\"taskCount\"> {filter === \"All\"\r\n          ? todos.length\r\n          : filter === \"Completed\"\r\n          ? completedTodos.length\r\n          : ActiveTodos.length} Tasks</div>\r\n      </Container>\r\n\r\n      <Paper square className=\"sidebar\">\r\n        <Tabs\r\n          value={value}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={handleChange}\r\n          aria-label=\"disabled tabs example\"\r\n        >\r\n          <Tab label=\"All\" onClick={() => filterTodo(\"All\")} />\r\n          <Tab label=\"Active\" onClick={() => filterTodo(\"Active\")} />\r\n          <Tab label=\"Completed\" onClick={() => filterTodo(\"Completed\")} />\r\n        </Tabs>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todoReducer.todos,\r\n    todoNumber: state.todoReducer.todoNumber,\r\n    filter: state.todoReducer.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getTodosRequest: () => dispatch(getTodosRequest()),\r\n    getTodosSuccess: (todo) => dispatch(getTodosSuccess(todo)),\r\n    postTodoSuccess: (data) => dispatch(postTodoSuccess(data)),\r\n    setFilter: (filter) => dispatch(setFilter(filter)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n","import { Box, Grid, Paper } from \"@material-ui/core\";\nimport \"./App.css\";\nimport TodoList from \"./components/TodoList/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"appContainer\">\n      <div className=\"title\">\n        <Box\n          display=\"flex\"\n          p={3}\n          className=\"titleBox\"\n        >Your Today's Todo List</Box>\n      </div>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  GET_TODOS_REQUEST,\r\n  GET_TODOS_SUCCESS,\r\n  GET_TODOS_FAILURE,\r\n  POST_TODO_SUCCESS,\r\n  DELETE_TODO_SUCCESS,\r\n  POST_TODOS_REQUEST,\r\n  POST_TODOS_FAILURE,\r\n  TODO_STATUS_CHANGE,\r\n  SET_FILTER,\r\n  PUT_TODOS_REQUEST,\r\n  PUT_TODO_SUCCESS,\r\n  PUT_TODOS_FAILURE,\r\n} from \"../ActionTypes/TodoActionTypes\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  todos: [],\r\n  error: null,\r\n  todoNumber: null,\r\n  filter: \"All\",\r\n};\r\n\r\nconst todoReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case GET_TODOS_REQUEST:\r\n\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case GET_TODOS_SUCCESS:\r\n\r\n      return {\r\n        ...state,\r\n        todoNumber: action.payload.length,\r\n        isLoading: false,\r\n        todos: action.payload,\r\n      };\r\n\r\n    case GET_TODOS_FAILURE:\r\n\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        todos: [],\r\n        error: action.error,\r\n      };\r\n\r\n    case POST_TODOS_REQUEST:\r\n\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case POST_TODO_SUCCESS:\r\n\r\n      return {\r\n        ...state,\r\n        todoNumber: state.todoNumber + 1,\r\n        todos: [...state.todos, action.newTodo],\r\n      };\r\n\r\n    case POST_TODOS_FAILURE:\r\n\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    case DELETE_TODO_SUCCESS:\r\n\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(function (todo) {\r\n          return todo.id !== action.id;\r\n        }),\r\n      };\r\n\r\n    case TODO_STATUS_CHANGE:\r\n\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(function (todo) {\r\n          if (todo.id === action.id) {\r\n            if (todo.isActive === true) {\r\n              todo.isActive = false;\r\n            } else {\r\n              todo.isActive = true;\r\n            }\r\n          }\r\n          return todo;\r\n        }),\r\n      };\r\n\r\n    case SET_FILTER:\r\n\r\n      return {\r\n        ...state,\r\n        filter: action.filter,\r\n      };\r\n\r\n      case PUT_TODOS_REQUEST:\r\n\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n\r\n      case PUT_TODO_SUCCESS:\r\n\r\n        return {\r\n          ...state,\r\n          isLoading : false,\r\n          todos : state.todos.filter(function (todo) {\r\n            if (todo.id === action.id) {\r\n              todo.name = action.name\r\n            }\r\n            return todo;\r\n          }),\r\n        }\r\n\r\n        case PUT_TODOS_FAILURE:\r\n\r\n          return {\r\n            ...state,\r\n            isLoading : false,\r\n            error : action.error\r\n          };\r\n    \r\n    default:\r\n      \r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todoReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport todoReducer from \"./TodoReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  todoReducer: todoReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport rootReducer from \"./Reducer/RootReducer\";\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}